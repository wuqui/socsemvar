# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_read_data.ipynb.

# %% auto 0
__all__ = ['get_fpaths_year', 'get_fpaths_subreddit', 'read_one_comments_csv', 'read_multi_comments_csvs']

# %% ../nbs/01_read_data.ipynb 3
from pathlib import Path
import pandas as pd

# %% ../nbs/01_read_data.ipynb 9
def get_fpaths_year(year: str, dir='../data_test/years'): 
	dir_path = Path(dir)
	return list(dir_path.glob(f'{year}*.csv'))

# %% ../nbs/01_read_data.ipynb 11
def get_fpaths_subreddit(subreddit: str, dir='../data_test/subreddits'): 
	dir_path = Path(dir)
	return list(dir_path.glob(f'{subreddit}*.csv'))

# %% ../nbs/01_read_data.ipynb 16
def read_one_comments_csv(fpath):
    try:
        comments = pd.read_csv(
            fpath,
            usecols=['id', 'created_utc', 'author', 'subreddit', 'body'],
            dtype={
                'id': 'string',
                'author': 'string',
                'subreddit': 'string',
                'body': 'string'
            },
            parse_dates=['created_utc'],
            low_memory=False,
            lineterminator='\n'
        )
        comments_clean = comments\
            .dropna()\
            .drop_duplicates(subset='id')
        return comments_clean
    except FileNotFoundError:
        print(f'{fpath} not found on disk')
    except pd.errors.EmptyDataError:
        print(f'{fpath} is empty')

# %% ../nbs/01_read_data.ipynb 19
def read_multi_comments_csvs(fpaths: list):
    comments_lst = []
    for fpath in fpaths:
        comments = read_one_comments_csv(fpath)
        comments_lst.append(comments)
    comments_concat = pd.concat(
        comments_lst,
        axis=0,
        ignore_index=True
    )
    return comments_concat
